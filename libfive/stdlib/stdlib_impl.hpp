/*
 *  C++ API for the libfive standard library
 *
 *  DO NOT EDIT BY HAND!
 *  This file is automatically generated from libfive/stdlib/libfive_stdlib.h
 *
 *  It was last generated on 2022-02-19 20:19:38 by user mkeeter
 */
#pragma once
#include "libfive/tree/tree.hpp"

namespace libfive {

// Header (hand-written in gen_c.py)
struct TreeVec2 {
    Tree x, y;
};
struct TreeVec3 {
    Tree x, y, z;
};
typedef Tree TreeFloat;

// Autogenerated content begins here

////////////////////////////////////////////////////////////////////////////////
// csg
Tree _union(Tree, Tree);
Tree intersection(Tree, Tree);
Tree inverse(Tree);
Tree difference(Tree, Tree);
Tree offset(Tree, TreeFloat);
Tree clearance(Tree, Tree, TreeFloat);
Tree shell(Tree, TreeFloat);
Tree blend_expt(Tree, Tree, TreeFloat);
Tree blend_expt_unit(Tree, Tree, TreeFloat);
Tree blend_rough(Tree, Tree, TreeFloat);
Tree blend_difference(Tree, Tree, TreeFloat, TreeFloat);
Tree morph(Tree, Tree, TreeFloat);
Tree loft(Tree, Tree, TreeFloat, TreeFloat);
Tree loft_between(Tree, Tree, TreeVec3, TreeVec3);

////////////////////////////////////////////////////////////////////////////////
// shapes
Tree circle(TreeFloat, TreeVec2);
Tree ring(TreeFloat, TreeFloat, TreeVec2);
Tree polygon(TreeFloat, int, TreeVec2);
Tree rectangle(TreeVec2, TreeVec2);
Tree rounded_rectangle(TreeVec2, TreeVec2, TreeFloat);
Tree rectangle_exact(TreeVec2, TreeVec2);
Tree rectangle_centered_exact(TreeVec2, TreeVec2);
Tree triangle(TreeVec2, TreeVec2, TreeVec2);
Tree box_mitered(TreeVec3, TreeVec3);
Tree box_mitered_centered(TreeVec3, TreeVec3);
Tree box_exact_centered(TreeVec3, TreeVec3);
Tree box_exact(TreeVec3, TreeVec3);
Tree rounded_box(TreeVec3, TreeVec3, TreeFloat);
Tree sphere(TreeFloat, TreeVec3);
Tree half_space(TreeVec3, TreeVec3);
Tree cylinder_z(TreeFloat, TreeFloat, TreeVec3);
Tree cone_ang_z(TreeFloat, TreeFloat, TreeVec3);
Tree cone_z(TreeFloat, TreeFloat, TreeVec3);
Tree pyramid_z(TreeVec2, TreeVec2, TreeFloat, TreeFloat);
Tree torus_z(TreeFloat, TreeFloat, TreeVec3);
Tree gyroid(TreeVec3, TreeFloat);
Tree emptiness_();
Tree array_x(Tree, int, TreeFloat);
Tree array_xy(Tree, int, int, TreeVec2);
Tree array_xyz(Tree, int, int, int, TreeVec3);
Tree array_polar_z(Tree, int, TreeVec2);
Tree extrude_z(Tree, TreeFloat, TreeFloat);

////////////////////////////////////////////////////////////////////////////////
// transforms
Tree move(Tree, TreeVec3);
Tree reflect_x(Tree, TreeFloat);
Tree reflect_y(Tree, TreeFloat);
Tree reflect_z(Tree, TreeFloat);
Tree reflect_xy(Tree);
Tree reflect_yz(Tree);
Tree reflect_xz(Tree);
Tree symmetric_x(Tree);
Tree symmetric_y(Tree);
Tree symmetric_z(Tree);
Tree scale_x(Tree, TreeFloat, TreeFloat);
Tree scale_y(Tree, TreeFloat, TreeFloat);
Tree scale_z(Tree, TreeFloat, TreeFloat);
Tree scale_xyz(Tree, TreeVec3, TreeVec3);
Tree rotate_x(Tree, TreeFloat, TreeVec3);
Tree rotate_y(Tree, TreeFloat, TreeVec3);
Tree rotate_z(Tree, TreeFloat, TreeVec3);
Tree taper_x_y(Tree, TreeVec2, TreeFloat, TreeFloat, TreeFloat);
Tree taper_xy_z(Tree, TreeVec3, TreeFloat, TreeFloat, TreeFloat);
Tree shear_x_y(Tree, TreeVec2, TreeFloat, TreeFloat, TreeFloat);
Tree repel(Tree, TreeVec3, TreeFloat, TreeFloat);
Tree repel_x(Tree, TreeVec3, TreeFloat, TreeFloat);
Tree repel_y(Tree, TreeVec3, TreeFloat, TreeFloat);
Tree repel_z(Tree, TreeVec3, TreeFloat, TreeFloat);
Tree repel_xy(Tree, TreeVec3, TreeFloat, TreeFloat);
Tree repel_yz(Tree, TreeVec3, TreeFloat, TreeFloat);
Tree repel_xz(Tree, TreeVec3, TreeFloat, TreeFloat);
Tree attract(Tree, TreeVec3, TreeFloat, TreeFloat);
Tree attract_x(Tree, TreeVec3, TreeFloat, TreeFloat);
Tree attract_y(Tree, TreeVec3, TreeFloat, TreeFloat);
Tree attract_z(Tree, TreeVec3, TreeFloat, TreeFloat);
Tree attract_xy(Tree, TreeVec3, TreeFloat, TreeFloat);
Tree attract_yz(Tree, TreeVec3, TreeFloat, TreeFloat);
Tree attract_xz(Tree, TreeVec3, TreeFloat, TreeFloat);
Tree revolve_y(Tree, TreeFloat);
Tree twirl_x(Tree, TreeFloat, TreeFloat, TreeVec3);
Tree twirl_axis_x(Tree, TreeFloat, TreeFloat, TreeVec3);
Tree twirl_y(Tree, TreeFloat, TreeFloat, TreeVec3);
Tree twirl_axis_y(Tree, TreeFloat, TreeFloat, TreeVec3);
Tree twirl_z(Tree, TreeFloat, TreeFloat, TreeVec3);
Tree twirl_axis_z(Tree, TreeFloat, TreeFloat, TreeVec3);

////////////////////////////////////////////////////////////////////////////////
// text
Tree text(const char*, TreeVec2);
}   // namespace libfive